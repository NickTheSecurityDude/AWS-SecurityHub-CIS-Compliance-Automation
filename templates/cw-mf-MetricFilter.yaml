AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  aaa
Metadata:
  Identifier: cw-mf-MetricFilter
  CreatedOn: 2021/08/8
  CreatedBy: Nick The Security Dude
Parameters:
  pLogGroupName:
    Type: String
  pMetricNamespace:
    Type: String
  pSNSAlarmTopicName:
    Type: String
Resources:

  # 3.1 – Ensure a log metric filter and alarm exist for unauthorized API calls
  rCIS31Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.errorCode=\"*UnauthorizedOperation\") || ($.errorCode=\"AccessDenied*\")}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.1
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS31Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.1
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.2 – Ensure a log metric filter and alarm exist for AWS Management Console sign-in without MFA
  rCIS32Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      # Filter modified to not alert if AssumeRole was used, ie. SSO
      FilterPattern: "{($.eventName=\"ConsoleLogin\") && ( ($.additionalEventData.MFAUsed !=\"Yes\") && ($.userIdentity.type != \"AssumedRole\"))}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.2
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS32Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.2
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.2a – Ensure a log metric filter and alarm exist for AWS Management Console sign-in without MFA
  rCIS32aFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      # Filter modified to not alert if AssumeRole was used, ie. SSO
      FilterPattern: "{($.eventName=\"ConsoleLogin\") && ($.additionalEventData.MFAUsed !=\"Yes\")}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.2a
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS32aAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.2a
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1


  # 3.3 – Ensure a log metric filter and alarm exist for usage of "root" account
  # Also meets: 1.1 – Avoid the use of the "root" account
  rCIS33Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{$.userIdentity.type=\"Root\" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !=\"AwsServiceEvent\"}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.3
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS33Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.3
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.4 – Ensure a log metric filter and alarm exist for IAM policy changes
  rCIS34Filter:
    Type: AWS::Logs::MetricFilter
    Properties: 
      FilterPattern: "{($.eventName=DeleteGroupPolicy) || ($.eventName=DeleteRolePolicy) || ($.eventName=DeleteUserPolicy) || ($.eventName=PutGroupPolicy) || ($.eventName=PutRolePolicy) || ($.eventName=PutUserPolicy) || ($.eventName=CreatePolicy) || ($.eventName=DeletePolicy) || ($.eventName=CreatePolicyVersion) || ($.eventName=DeletePolicyVersion) || ($.eventName=AttachRolePolicy) || ($.eventName=DetachRolePolicy) || ($.eventName=AttachUserPolicy) || ($.eventName=DetachUserPolicy) || ($.eventName=AttachGroupPolicy) || ($.eventName=DetachGroupPolicy)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations: 
        -   
          MetricName: CIS-3.4
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS34Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.4
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.5 – Ensure a log metric filter and alarm exist for CloudTrail configuration changes
  rCIS35Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=CreateTrail) || ($.eventName=UpdateTrail) || ($.eventName=DeleteTrail) || ($.eventName=StartLogging) || ($.eventName=StopLogging)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.5
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS35Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.5
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.6 – Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
  rCIS36Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=ConsoleLogin) && ($.errorMessage=\"Failed authentication\")}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.6
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS36Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.6
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.7 – Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
  rCIS37Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventSource=kms.amazonaws.com) && (($.eventName=DisableKey) || ($.eventName=ScheduleKeyDeletion))}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.7
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS37Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.7
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.8 – Ensure a log metric filter and alarm exist for S3 bucket policy changes
  rCIS38Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventSource=s3.amazonaws.com) && (($.eventName=PutBucketAcl) || ($.eventName=PutBucketPolicy) || ($.eventName=PutBucketCors) || ($.eventName=PutBucketLifecycle) || ($.eventName=PutBucketReplication) || ($.eventName=DeleteBucketPolicy) || ($.eventName=DeleteBucketCors) || ($.eventName=DeleteBucketLifecycle) || ($.eventName=DeleteBucketReplication))}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.8
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS38Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.8
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.9 – Ensure a log metric filter and alarm exist for AWS Config configuration changes
  rCIS39Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventSource=config.amazonaws.com) && (($.eventName=StopConfigurationRecorder) || ($.eventName=DeleteDeliveryChannel) || ($.eventName=PutDeliveryChannel) || ($.eventName=PutConfigurationRecorder))}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.9
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS39Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.9
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  #  3.10 – Ensure a log metric filter and alarm exist for security group changes
  rCIS310Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=AuthorizeSecurityGroupIngress) || ($.eventName=AuthorizeSecurityGroupEgress) || ($.eventName=RevokeSecurityGroupIngress) || ($.eventName=RevokeSecurityGroupEgress) || ($.eventName=CreateSecurityGroup) || ($.eventName=DeleteSecurityGroup)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.10
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS310Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.10
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.11 – Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
  rCIS311Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=CreateNetworkAcl) || ($.eventName=CreateNetworkAclEntry) || ($.eventName=DeleteNetworkAcl) || ($.eventName=DeleteNetworkAclEntry) || ($.eventName=ReplaceNetworkAclEntry) || ($.eventName=ReplaceNetworkAclAssociation)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.11
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS311Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.11
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.12 – Ensure a log metric filter and alarm exist for changes to network gateways
  rCIS312Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=CreateCustomerGateway) || ($.eventName=DeleteCustomerGateway) || ($.eventName=AttachInternetGateway) || ($.eventName=CreateInternetGateway) || ($.eventName=DeleteInternetGateway) || ($.eventName=DetachInternetGateway)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.12
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS312Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.12
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.13 – Ensure a log metric filter and alarm exist for route table changes
  rCIS313Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=CreateRoute) || ($.eventName=CreateRouteTable) || ($.eventName=ReplaceRoute) || ($.eventName=ReplaceRouteTableAssociation) || ($.eventName=DeleteRouteTable) || ($.eventName=DeleteRoute) || ($.eventName=DisassociateRouteTable)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.13
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS313Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.13
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1

  # 3.14 – Ensure a log metric filter and alarm exist for VPC changes
  rCIS314Filter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{($.eventName=CreateVpc) || ($.eventName=DeleteVpc) || ($.eventName=ModifyVpcAttribute) || ($.eventName=AcceptVpcPeeringConnection) || ($.eventName=CreateVpcPeeringConnection) || ($.eventName=DeleteVpcPeeringConnection) || ($.eventName=RejectVpcPeeringConnection) || ($.eventName=AttachClassicLinkVpc) || ($.eventName=DetachClassicLinkVpc) || ($.eventName=DisableVpcClassicLink) || ($.eventName=EnableVpcClassicLink)}"
      LogGroupName: !Ref pLogGroupName
      MetricTransformations:
        -
          MetricName: CIS-3.14
          MetricNamespace: !Ref pMetricNamespace
          MetricValue: 1

  rCIS314Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:${pSNSAlarmTopicName}
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CIS-3.14
      Namespace: !Ref pMetricNamespace
      Period: 300
      Statistic: Average
      Threshold: 1
